####################################
#Preparation for dada2 2020
####################################


#Make working directories
mkdir 16S_2020_DADA2
cd 16S_2020_DADA2
mkdir Original

#copy fastq files to directory Original
find ../raw_2020 -type f -name "*.bz2" -exec cp {} Original \;

# set variables, program and script locations
FILELOCATION="/DATA/mikrobiom/16S_2020_DADA2"
NSAMPLE="40"

cd $FILELOCATION

###step 0: shorten file names
# save original file names
ls -1v ./Original/*R1.fastq.bz2 > ./originalR1
ls -1v ./Original/*R2.fastq.bz2 > ./originalR2

mkdir Renamed

# copy original files to new file names
new=1
for i in $(ls -1v ./Original/*R1.fastq.bz2)
do
cp ${i} ./Renamed/${new}"_R1.fastq.bz2"
((new++))
done

new=1
for i in $(ls -1v ./Original/*R2.fastq.bz2)
do
cp ${i} ./Renamed/${new}"_R2.fastq.bz2"
((new++))
done

# check that the renaming was done correctly
ls -1v ./Renamed/[0-9]*_R1.fastq.bz2 > ./renamedR1
ls -1v ./Renamed/[0-9]*_R2.fastq.bz2  > ./renamedR2

paste ./originalR1 ./renamedR1 > ./fileID_R1
paste ./originalR2 ./renamedR2 > ./fileID_R2

#the following commands schould not give any output
while read line ; do
diff $(echo "$line")
done < ./fileID_R1

while read line ; do
diff $(echo "$line")
done < ./fileID_R2

###step 1: primer clipping 
#Primers Klindworth et al. 2013
#==FORWARD==
#Bact341F:
#5'-CCTACGGGNGGCWGCAG-3'         S-D-Bact-0341-b-S-17
#and Bact341F plus up to 3 additional bases in front:
#
#  5'-TCCTACGGGNGGCWGCAG-3'
# 5'-ATCCTACGGGNGGCWGCAG-3'
#5'-TGTCCTACGGGNGGCWGCAG-3'

#==REVERSE==
#Bact785R:
#5'-GACTACHVGGGTATCTAAKCC-3'     S-D-Bact-0785-a-A-21

# bacterial primer V3-V4
FBC=CCTACGGGNGGCWGCAG # forward primer not anchored due to the mixed versions
RBC=^GACTACHVGGGTATCTAAKCC # reverse primer
OFWD=17 # length of forward primer (17) - 1
OREV=20 # length of reverse primer (21) - 1
ERROR=0.16

mkdir Clipped
mkdir Logfiles

#run primers clipping
#Cutadapt https://cutadapt.readthedocs.io/en/stable/index.html

# Let's process the reads in the FR orientation...
## Look for forward primer in R1. R2 is processed at the same time to make sure these files go 
## through the same processes and any sequences discarded match between outputs.
## If primer is not found and no trimming is done, both R1 and R2 are discarded
## temporary, log, and information files are placed in the sample directory... 
for SGE_TASK_ID in `seq 1 40`;
do cutadapt --minimum-length 1  --no-indels -O ${OFWD} -g ${FBC} -e ${ERROR} -j 0 --info-file ./Clipped/${SGE_TASK_ID}"_clip_fr.R1.info" -o ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq" -p ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq" ./Renamed/${SGE_TASK_ID}"_R1.fastq.bz2" ./Renamed/${SGE_TASK_ID}"_R2.fastq.bz2" --untrimmed-o /dev/null --untrimmed-p /dev/null > ./Clipped/${SGE_TASK_ID}"_clip_fr.R1.cutadapt.log" 2>&1

## Using the output of the previous command (the TMP files), we'll now look for the reverse primer in R2, bringing R1 along for the ride.
## note inverse orientation of input files. As before, if primer is not found, remove the pair.
## this step generates the final results for the FWD-REV orienatation, accepting those seqs that passed the first stage.
cutadapt --minimum-length 1 --no-indels -O ${OREV} -g ${RBC} -e ${ERROR} -j 0 --info-file ./Clipped/${SGE_TASK_ID}"_clip_fr.R2.info" -o ./Clipped/${SGE_TASK_ID}"_clip_R2.fastq" -p ./Clipped/${SGE_TASK_ID}"_clip_R1.fastq" ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq" ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq" --untrimmed-o /dev/null --untrimmed-p /dev/null > ./Clipped/${SGE_TASK_ID}"_clip_fr.R2.cutadapt.log" 2>&1

## clean up TMP files...
rm ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq"
rm ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq"

# Now to process the reads with the RF orientation...
## First, we search for the reverse primer in R1...
cutadapt --minimum-length 1 --no-indels -O ${OREV} -g ${RBC} -e ${ERROR} -j 0 --info-file ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.info" -o ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq" -p ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq" ./Renamed/${SGE_TASK_ID}"_R1.fastq.bz2" ./Renamed/${SGE_TASK_ID}"_R2.fastq.bz2" --untrimmed-o /dev/null --untrimmed-p /dev/null > ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.cutadapt.log" 2>&1

## As before, we search for the forward primer in R2, only processing the output of the previous command
cutadapt --minimum-length 1 --no-indels -O ${OFWD} -g ${FBC} -e ${ERROR} -j 0 --info-file ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.info" -o ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.fastq" -p ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.fastq" ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq" ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq" --untrimmed-o /dev/null --untrimmed-p /dev/null > ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.cutadapt.log" 2>&1

## remove the temp files, as -o ${RFR2} -p ${RFR1} have this step's results
rm ./Clipped/${SGE_TASK_ID}"_clip_R1.TMP.fastq" 
rm ./Clipped/${SGE_TASK_ID}"_clip_R2.TMP.fastq"

# Reorient REV-FWD output to FWD-REV
# Change the read id in the headers "@MISEQ:41:000000000-A9A9U:1:1101:17488:1966 1:N:0:AGGCAGAAAGAGTAGA"
awk '{if (NR%4==1){gsub("^1:","2:",$2); print $0}else{print $0}}' ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.fastq" > ./Clipped/${SGE_TASK_ID}"_rf2frR2.fastq"
awk '{if (NR%4==1){gsub("^2:","1:",$2); print $0}else{print $0}}' ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.fastq" > ./Clipped/${SGE_TASK_ID}"_rf2frR1.fastq"

# rename the reorient. rev-fwd files
mv ./Clipped/${SGE_TASK_ID}"_rf2frR1.fastq" ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.fastq"
mv ./Clipped/${SGE_TASK_ID}"_rf2frR2.fastq" ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.fastq"

# add all corrected seqs to the fwd-rev fastqs
cat ./Clipped/${SGE_TASK_ID}"_clip_rf.R1.fastq" >> ./Clipped/${SGE_TASK_ID}"_clip_R1.fastq"
cat ./Clipped/${SGE_TASK_ID}"_clip_rf.R2.fastq" >> ./Clipped/${SGE_TASK_ID}"_clip_R2.fastq";
done

# cleaning up directories
mkdir ./Clipped/Clipped_logs
mkdir ./Clipped/Clipped_logs/rf
mv ./Clipped/*.log ./Clipped/Clipped_logs/
mv ./Clipped/*.info ./Clipped/Clipped_logs/
mv Clipped/*rf* ./Clipped/Clipped_logs/rf/


#Following steps are done in R dada2_V3V4.R
